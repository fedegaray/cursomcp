@mcp.tool()
def sincronizar_con_github(proyecto_id: int, crear_repo: bool = False) -> str:
    """
    Sincroniza un proyecto con GitHub
    
    Args:
        proyecto_id: ID del proyecto a sincronizar
        crear_repo: Si crear un nuevo repositorio (default: False)
    """
    if not GITHUB_TOKEN:
        return "Token de GitHub no configurado. Configura GITHUB_TOKEN"
    
    if proyecto_id not in proyectos_db:
        return f"‚ùå Proyecto {proyecto_id} no encontrado"
    
    proyecto = proyectos_db[proyecto_id]
    headers = {
        "Authorization": f"token {GITHUB_TOKEN}",
        "Accept": "application/vnd.github.v3+json"
    }
    
    if crear_repo:
        url = "https://api.github.com/user/repos"
        data = {
            "name": proyecto["nombre"].replace(" ", "-").lower(),
            "description": proyecto["descripcion"],
            "private": False
        }
        
        response = requests.post(url, json=data, headers=headers)
        
        if response.status_code == 201:
            repo_url = response.json()["html_url"]
            proyecto["github_url"] = repo_url
            return f"‚úÖ Repositorio creado: {repo_url}"
        else:
            return f"‚ùå Error creando repo: {response.json().get('message', 'Error desconocido')}"
    
    return f"üìä Proyecto '{proyecto['nombre']}' listo para sincronizar"
